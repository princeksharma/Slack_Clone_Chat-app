{"version":3,"sources":["components/UsernameForm.js","components/MessagesList.js","components/SendMessageForm.js","components/TypingIndicator.js","components/WhosOnlineList.js","ChatScreen.js","App.js","index.js"],"names":["UsernameForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","onSubmit","bind","assertThisInitialized","onChange","e","preventDefault","setState","target","value","react_default","a","createElement","type","placeholder","Component","MessagesList","styles","container","overflowY","flex","ul","listStyle","li","marginTop","marginBottom","senderUsername","fontWeight","message","fontSize","style","objectSpread","messages","map","index","key","senderId","text","SendMessageForm","padding","borderTop","form","display","input","color","background","outline","border","TypingIndicator","usersWhoAreTyping","length","concat","slice","join","WhosOnlineList","users","user","id","currentUser","WhosOnlineList_WhosOnlineListItem","presenceState","name","presence","renderUsers","WhosOnlineListItem","alignItems","paddingTop","paddingBottom","div","borderRadius","width","height","marginRight","backgroundColor","children","ChatScreen","currentRoom","userWhoAreTyping","sendMessage","sendTypeEvent","sendTypingEvent","isTypingIn","roomId","catch","error","console","_this2","Chatkit","ChatManager","instanceLocator","userId","currentUsername","tokenProvider","TokenProvider","url","connect","then","subscribeToRoom","messageLimit","hooks","onMessage","toConsumableArray","onUserStartedTyping","onUserStoppedTyping","filter","onPresenceChange","forceUpdate","onUserJoined","flexDirection","chatContainer","whosOnlineListContainer","chatListContainer","components_WhosOnlineList","components_MessagesList","chatList","components_TypingIndicator","components_SendMessageForm","App","currentScreen","onUsernameSubmitted","fetch","method","headers","Content-Type","body","JSON","stringify","response","components_UsernameForm","src_ChatScreen","ReactDOM","render","src_App","document","getElementById"],"mappings":"wOAwCgBA,cArCf,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,SAAU,IAEZR,EAAKS,SAAWT,EAAKS,SAASC,KAAdT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAChBA,EAAKY,SAAWZ,EAAKY,SAASF,KAAdT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KANCA,wEASVa,GACPA,EAAEC,iBACFX,KAAKJ,MAAMU,SAASN,KAAKI,MAAMC,2CAGxBK,GACNV,KAAKY,SAAS,CAAEP,SAAUK,EAAEG,OAAOC,yCAInC,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,QAAMX,SAAUN,KAAKM,UACnBS,EAAAC,EAAAC,cAAA,SACEC,KAAK,OACLC,YAAY,iBACZV,SAAUT,KAAKS,WAEjBM,EAAAC,EAAAC,cAAA,SAAOC,KAAK,qBA9BGE,2CC4CXC,mLAxCX,IAAMC,EAAS,CACbC,UAAW,CACTC,UAAW,SACXC,KAAM,GAERC,GAAI,CACFC,UAAW,QAEbC,GAAI,CACFC,UAAW,GACXC,aAAc,IAEhBC,eAAgB,CACdC,WAAY,QAEdC,QAAS,CAAEC,SAAU,KAGvB,OACEnB,EAAAC,EAAAC,cAAA,OACEkB,MAAKrC,OAAAsC,EAAA,EAAAtC,CAAA,GACAE,KAAKJ,MAAMuC,MACXb,EAAOC,YAGZR,EAAAC,EAAAC,cAAA,MAAIkB,MAAOb,EAAOI,IACf1B,KAAKJ,MAAMyC,SAASC,IAAI,SAACL,EAASM,GAAV,OACvBxB,EAAAC,EAAAC,cAAA,MAAIuB,IAAKD,EAAOJ,MAAOb,EAAOM,IAC5Bb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMkB,MAAOb,EAAOS,gBAAiBE,EAAQQ,UAAiB,KAEhE1B,EAAAC,EAAAC,cAAA,KAAGkB,MAAOb,EAAOW,SAAUA,EAAQS,kBAnCvBtB,aC4DZuB,cA3Db,SAAAA,EAAY/C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2C,IACjB9C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6C,GAAAxC,KAAAH,KAAMJ,KACDQ,MAAQ,CACXsC,KAAM,IAER7C,EAAKS,SAAWT,EAAKS,SAASC,KAAdT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAChBA,EAAKY,SAAWZ,EAAKY,SAASF,KAAdT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KANCA,wEASVa,GACPA,EAAEC,iBACFX,KAAKJ,MAAMU,SAASN,KAAKI,MAAMsC,MAC/B1C,KAAKY,SAAS,CAAE8B,KAAM,sCAGfhC,GACPV,KAAKY,SAAS,CAAE8B,KAAMhC,EAAEG,OAAOC,QAC5Bd,KAAKJ,MAAMa,UACZT,KAAKJ,MAAMa,4CAKb,IAAMa,EAAS,CACbC,UAAW,CACTqB,QAAS,GACTC,UAAW,oBACXf,aAAc,IAEhBgB,KAAM,CACJC,QAAS,QAEXC,MAAO,CACLC,MAAO,UACPC,WAAY,OACZC,QAAS,OACTC,OAAQ,OACR3B,KAAM,EACNS,SAAU,KAGd,OACEnB,EAAAC,EAAAC,cAAA,OAAKkB,MAAOb,EAAOC,WACjBR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMX,SAAUN,KAAKM,SAAU6B,MAAOb,EAAOwB,MAC3C/B,EAAAC,EAAAC,cAAA,SACEC,KAAK,OACLC,YAAY,qCACZV,SAAUT,KAAKS,SACfK,MAAOd,KAAKI,MAAMsC,KAClBP,MAAOb,EAAO0B,kBAnDE5B,aCefiC,mLAbX,OAAIrD,KAAKJ,MAAM0D,kBAAkBC,OAAS,EAEtCxC,EAAAC,EAAAC,cAAA,cAAAuC,OACMxD,KAAKJ,MAAM0D,kBACZG,MAAM,EAAG,GACTC,KAAK,SAHV,eAOG3C,EAAAC,EAAAC,cAAA,mBAXmBG,aCAxBuC,wLACU,IAAA9D,EAAAG,KACZ,OACEe,EAAAC,EAAAC,cAAA,UACGjB,KAAKJ,MAAMgE,MAAMtB,IAAI,SAACuB,EAAMtB,GAC3B,OAAIsB,EAAKC,KAAOjE,EAAKD,MAAMmE,YAAYD,GAEnC/C,EAAAC,EAAAC,cAAC+C,EAAD,CAAoBxB,IAAKD,EAAO0B,cAAc,UAC3CJ,EAAKK,KADR,UAMFnD,EAAAC,EAAAC,cAAC+C,EAAD,CAAoBxB,IAAKD,EAAO0B,cAAeJ,EAAKM,SAAS/D,OAC3DyD,EAAKK,0CASf,OAAIlE,KAAKJ,MAAMgE,MACN5D,KAAKoE,cAELrD,EAAAC,EAAAC,cAAA,8BA1BgBG,aA+BvBiD,mLAEF,IAAM/C,EAAS,CACbM,GAAI,CACFmB,QAAS,OACTuB,WAAY,SACZzC,UAAW,EACXC,aAAc,EACdyC,WAAY,EACZC,cAAe,GAEjBC,IAAK,CACHC,aAAc,MACdC,MAAO,GACPC,OAAQ,GACRC,YAAa,KAGjB,OACE9D,EAAAC,EAAAC,cAAA,MAAIkB,MAAOb,EAAOM,IAChBb,EAAAC,EAAAC,cAAA,OACEkB,MAAKrC,OAAAsC,EAAA,EAAAtC,CAAA,GACAwB,EAAOmD,IADP,CAEHK,gBAC+B,WAA7B9E,KAAKJ,MAAMqE,cAA6B,UAAY,cAGzDjE,KAAKJ,MAAMmF,iBA3Ba3D,aAiClBuC,ICiEAqB,cA3HX,SAAAA,EAAYpF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgF,IACnBnF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkF,GAAA7E,KAAAH,KAAMJ,KACDQ,MAAQ,CACX2D,YAAa,GACbkB,YAAa,GACbhD,QAAS,GACTiD,iBAAkB,IAEpBrF,EAAKoC,QAAUpC,EAAKsF,YAAY5E,KAAjBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACfA,EAAKuF,cAAgBvF,EAAKwF,gBAAgB9E,KAArBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KATFA,iFAanBG,KAAKI,MAAM2D,YACPuB,WAAW,CAACC,OAAQvF,KAAKI,MAAM6E,YAAYnB,KAC3C0B,MAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,QAASA,yCAGhC/C,GACV1C,KAAKI,MAAM2D,YAAYoB,YAAY,CACjCzC,OACA6C,OAAQvF,KAAKI,MAAM6E,YAAYnB,iDAId,IAAA6B,EAAA3F,KACC,IAAI4F,IAAQC,YAAY,CAC1CC,gBAAiB,8CACjBC,OAAQ/F,KAAKJ,MAAMoG,gBACnBC,cAAe,IAAIL,IAAQM,cAAc,CACvCC,IAAK,yCAKNC,UACAC,KAAK,SAAAtC,GAEI,OADR4B,EAAK/E,SAAS,CAAEmD,gBACDA,EAAYuC,gBAAgB,CACzCf,OAAQ,SACRgB,aAAc,IACdC,MAAO,CACLC,UAAW,SAAAxE,GACT0D,EAAK/E,SAAS,CACZyB,SAASvC,OAAA4G,EAAA,EAAA5G,CAAK6F,EAAKvF,MAAMiC,UAAjBmB,OAAA,CAA2BvB,OAG3B0E,oBAAqB,SAAA9C,GAC/B8B,EAAK/E,SAAS,CACZ0C,kBAAkBxD,OAAA4G,EAAA,EAAA5G,CAAK6F,EAAKvF,MAAMkD,mBAAjBE,OAAA,CAAoCK,EAAKK,UAG9D0C,oBAAqB,SAAA/C,GACnB8B,EAAK/E,SAAS,CACZ0C,kBAAmBqC,EAAKvF,MAAMkD,kBAAkBuD,OAC9C,SAAAxG,GAAQ,OAAIA,IAAawD,EAAKK,UAItC4C,iBAAkB,kBAAMnB,EAAKoB,eAC7BC,aAAc,kBAAMrB,EAAKoB,oBAI5BV,KAAK,SAAApB,GACJU,EAAK/E,SAAS,CAAEqE,kBAElBO,MAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,QAASA,sCAIxC,IAAMnE,EAAS,CACbC,UAAW,CACTqD,OAAQ,QACR7B,QAAS,OACTkE,cAAe,UAEjBC,cAAe,CACbnE,QAAS,OACTtB,KAAM,GAER0F,wBAAyB,CACvBxC,MAAO,QACPlD,KAAM,OACNmB,QAAS,GACTkC,gBAAiB,UACjB7B,MAAO,SAETmE,kBAAmB,CACjBxE,QAAS,GACT+B,MAAO,MACP5B,QAAS,OACTkE,cAAe,WAInB,OACElG,EAAAC,EAAAC,cAAA,OAAKkB,MAAOb,EAAOC,WACjBR,EAAAC,EAAAC,cAAA,OAAKkB,MAAOb,EAAO4F,eACjBnG,EAAAC,EAAAC,cAAA,SAAOkB,MAAOb,EAAO6F,yBACnBpG,EAAAC,EAAAC,cAACoG,EAAD,CACEtD,YAAa/D,KAAKI,MAAM2D,YACxBH,MAAO5D,KAAKI,MAAM6E,YAAYrB,QAEhC7C,EAAAC,EAAAC,cAAA,uCAEFF,EAAAC,EAAAC,cAAA,WAASkB,MAAOb,EAAO8F,mBACrBrG,EAAAC,EAAAC,cAACqG,EAAD,CACErF,QAASjC,KAAKI,MAAMiC,SACpBF,MAAOb,EAAOiG,WAEdxG,EAAAC,EAAAC,cAACuG,EAAD,CAAiBtC,iBAAkBlF,KAAKI,MAAM8E,mBAC9CnE,EAAAC,EAAAC,cAACwG,EAAD,CACAnH,SAAUN,KAAKmF,YACf1E,SAAUT,KAAKqF,4BAnHJjE,aCkCVsG,cApCX,SAAAA,IAAc,IAAA7H,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0H,IACZ7H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4H,GAAAvH,KAAAH,QACKI,MAAQ,CACX4F,gBAAiB,GACjB2B,cAAe,4BAEjB9H,EAAK+H,oBAAsB/H,EAAK+H,oBAAoBrH,KAAzBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KANfA,mFASMQ,GAAU,IAAAsF,EAAA3F,KAC5B6H,MAAM,8BAA+B,CACnCC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAE9H,eAEtBgG,KAAK,SAAA+B,GACJzC,EAAK/E,SAAS,CACZoF,gBAAiB3F,EACjBsH,cAAe,iBAGlBnC,MAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,QAASA,sCAI3C,MAAgC,6BAA7BzF,KAAKI,MAAMuH,cACN5G,EAAAC,EAAAC,cAACoH,EAAD,CAAc/H,SAAUN,KAAK4H,sBAEL,eAA7B5H,KAAKI,MAAMuH,cACL5G,EAAAC,EAAAC,cAACqH,EAAD,CAAYtC,gBAAiBhG,KAAKI,MAAM4F,uBADjD,SA/Bc5E,mBCClBmH,IAASC,OAAOzH,EAAAC,EAAAC,cAACwH,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.f2159fdf.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass UsernameForm extends Component {\r\n constructor(props) {\r\n   super(props)\r\n   this.state = {\r\n     username: '',\r\n   }\r\n   this.onSubmit = this.onSubmit.bind(this)\r\n   this.onChange = this.onChange.bind(this)\r\n }\r\n\r\n onSubmit(e) {\r\n   e.preventDefault()\r\n   this.props.onSubmit(this.state.username)\r\n }\r\n\r\n onChange(e) {\r\n    this.setState({ username: e.target.value })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h2>What is your username?</h2>\r\n          <form onSubmit={this.onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Your full name\"\r\n              onChange={this.onChange}\r\n            />\r\n            <input type=\"submit\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n export default UsernameForm\r\n","import React, { Component } from 'react'\r\n\r\nclass MessagesList extends Component {\r\n\r\n\r\n   render() {\r\n     const styles = {\r\n       container: {\r\n         overflowY: 'scroll',\r\n         flex: 1,\r\n       },\r\n       ul: {\r\n         listStyle: 'none',\r\n       },\r\n       li: {\r\n         marginTop: 13,\r\n         marginBottom: 13,\r\n       },\r\n       senderUsername: {\r\n         fontWeight: 'bold',\r\n       },\r\n       message: { fontSize: 15 },\r\n     }\r\n\r\n     return (\r\n       <div\r\n         style={{\r\n           ...this.props.style,\r\n           ...styles.container,\r\n         }}\r\n       >\r\n         <ul style={styles.ul}>\r\n           {this.props.messages.map((message, index) => (\r\n             <li key={index} style={styles.li}>\r\n               <div>\r\n                 <span style={styles.senderUsername}>{message.senderId}</span>{' '}\r\n               </div>\r\n               <p style={styles.message}>{message.text}</p>\r\n             </li>\r\n           ))}\r\n         </ul>\r\n       </div>\r\n     )\r\n   }\r\n }\r\n\r\n export default MessagesList\r\n","import React, { Component } from 'react'\r\n\r\nclass SendMessageForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      text: '',\r\n    }\r\n    this.onSubmit = this.onSubmit.bind(this)\r\n    this.onChange = this.onChange.bind(this)\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.onSubmit(this.state.text)\r\n    this.setState({ text: '' })\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ text: e.target.value })\r\n   if (this.props.onChange) {\r\n      this.props.onChange()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const styles = {\r\n      container: {\r\n        padding: 20,\r\n        borderTop: '1px #4C758F solid',\r\n        marginBottom: 20,\r\n      },\r\n      form: {\r\n        display: 'flex',\r\n      },\r\n      input: {\r\n        color: 'inherit',\r\n        background: 'none',\r\n        outline: 'none',\r\n        border: 'none',\r\n        flex: 1,\r\n        fontSize: 16,\r\n      },\r\n    }\r\n    return (\r\n      <div style={styles.container}>\r\n        <div>\r\n          <form onSubmit={this.onSubmit} style={styles.form}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Type a message here then hit ENTER\"\r\n              onChange={this.onChange}\r\n              value={this.state.text}\r\n              style={styles.input}\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SendMessageForm\r\n","import React, { Component } from 'react'\r\n\r\nclass TypingIndicator extends Component {\r\n  render() {\r\n    if (this.props.usersWhoAreTyping.length > 0) {\r\n      return (\r\n        <div>\r\n          {`${this.props.usersWhoAreTyping\r\n            .slice(0, 2)\r\n            .join(' and ')} is typing`}\r\n        </div>\r\n      )\r\n    }\r\n    return <div />\r\n  }\r\n}\r\n\r\nexport default TypingIndicator\r\n","import React, { Component } from 'react'\r\n\r\nclass WhosOnlineList extends Component {\r\n  renderUsers() {\r\n    return (\r\n      <ul>\r\n        {this.props.users.map((user, index) => {\r\n          if (user.id === this.props.currentUser.id) {\r\n            return (\r\n              <WhosOnlineListItem key={index} presenceState=\"online\">\r\n                {user.name} (You)\r\n              </WhosOnlineListItem>\r\n            )\r\n          }\r\n          return (\r\n            <WhosOnlineListItem key={index} presenceState={user.presence.state}>\r\n             {user.name}\r\n            </WhosOnlineListItem>\r\n          )\r\n        })}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if (this.props.users) {\r\n      return this.renderUsers()\r\n    } else {\r\n      return <p>Loading...</p>\r\n    }\r\n  }\r\n}\r\n\r\nclass WhosOnlineListItem extends Component {\r\n  render() {\r\n    const styles = {\r\n      li: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        paddingTop: 2,\r\n        paddingBottom: 2,\r\n      },\r\n      div: {\r\n        borderRadius: '50%',\r\n        width: 11,\r\n        height: 11,\r\n        marginRight: 10,\r\n      },\r\n    }\r\n    return (\r\n      <li style={styles.li}>\r\n        <div\r\n          style={{\r\n            ...styles.div,\r\n            backgroundColor:\r\n              this.props.presenceState === 'online' ? '#539eff' : '#414756',\r\n          }}\r\n        />\r\n        {this.props.children}\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WhosOnlineList\r\n","import React, { Component} from 'react'\r\nimport Chatkit from '@pusher/chatkit-client'\r\nimport MessagesList from './components/MessagesList'\r\nimport SendMessageForm from './components/SendMessageForm'\r\nimport TypingIndicator from './components/TypingIndicator'\r\nimport WhosOnlineList from './components/WhosOnlineList'\r\n\r\nclass ChatScreen extends Component {\r\n    constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      currentUser: {},\r\n      currentRoom: {},\r\n      message: [],\r\n      userWhoAreTyping: [],\r\n    }\r\n    this.message = this.sendMessage.bind(this)\r\n    this.sendTypeEvent = this.sendTypingEvent.bind(this)\r\n  }\r\n\r\n  sendTypingEvent() {\r\n    this.state.currentUser\r\n       .isTypingIn({roomId: this.state.currentRoom.id})\r\n       .catch(error => console.error('error', error))\r\n  }\r\n\r\n  sendMessage(text) {\r\n    this.state.currentUser.sendMessage({\r\n      text,\r\n      roomId: this.state.currentRoom.id,\r\n    })\r\n  }\r\n\r\n  componentDidMount () {\r\n    const chatManager = new Chatkit.ChatManager({\r\n      instanceLocator: 'v1:us1:e582f7d6-3b62-4fc6-a034-a4f71f7ed220',\r\n      userId: this.props.currentUsername,\r\n      tokenProvider: new Chatkit.TokenProvider({\r\n        url: 'http://localhost:3001/authenticate',\r\n      }),\r\n    })\r\n\r\n    chatManager\r\n      .connect()\r\n      .then(currentUser => {\r\n        this.setState({ currentUser })\r\n                return currentUser.subscribeToRoom({\r\n          roomId: 19390999,\r\n          messageLimit: 100,\r\n          hooks: {\r\n            onMessage: message => {\r\n              this.setState({\r\n                messages: [...this.state.messages, message],\r\n              })\r\n            },\r\n                        onUserStartedTyping: user => {\r\n              this.setState({\r\n                usersWhoAreTyping: [...this.state.usersWhoAreTyping, user.name],\r\n             })\r\n            },\r\n            onUserStoppedTyping: user => {\r\n              this.setState({\r\n                usersWhoAreTyping: this.state.usersWhoAreTyping.filter(\r\n                  username => username !== user.name\r\n                ),\r\n              })\r\n            },\r\n          onPresenceChange: () => this.forceUpdate(),\r\n          onUserJoined: () => this.forceUpdate(),\r\n        },\r\n        })\r\n      })\r\n      .then(currentRoom => {\r\n        this.setState({ currentRoom })\r\n     })\r\n     .catch(error => console.error('error', error))\r\n  }\r\n\r\n  render() {\r\n    const styles = {\r\n      container: {\r\n        height: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      },\r\n      chatContainer: {\r\n        display: 'flex',\r\n        flex: 1,\r\n      },\r\n      whosOnlineListContainer: {\r\n        width: '300px',\r\n        flex: 'none',\r\n        padding: 20,\r\n        backgroundColor: '#2c303b',\r\n        color: 'white',\r\n      },\r\n      chatListContainer: {\r\n        padding: 20,\r\n        width: '85%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      },\r\n   }\r\n\r\n    return (\r\n      <div style={styles.container}>\r\n        <div style={styles.chatContainer}>\r\n          <aside style={styles.whosOnlineListContainer}>\r\n            <WhosOnlineList\r\n              currentUser={this.state.currentUser}\r\n              users={this.state.currentRoom.users}\r\n            />\r\n            <h2>Who's online PLACEHOLDER</h2>\r\n          </aside>\r\n          <section style={styles.chatListContainer}>\r\n            <MessagesList\r\n              message={this.state.messages}\r\n              style={styles.chatList}\r\n              />\r\n              <TypingIndicator userWhoAreTyping={this.state.userWhoAreTyping} />\r\n              <SendMessageForm\r\n              onSubmit={this.sendMessage}\r\n              onChange={this.sendTypingEvent}\r\n              />\r\n          </section>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChatScreen;\r\n","import React, { Component } from 'react';\r\nimport UsernameForm from './components/UsernameForm';\r\nimport ChatScreen from './ChatScreen';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n      super()\r\n      this.state = {\r\n        currentUsername: '',\r\n        currentScreen: 'WhatIsYourUsernameScreen'\r\n      }\r\n      this.onUsernameSubmitted = this.onUsernameSubmitted.bind(this)\r\n    }\r\n\r\n    onUsernameSubmitted(username) {\r\n      fetch('http://localhost:3001/users', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username }),\r\n      })\r\n        .then(response => {\r\n          this.setState({\r\n            currentUsername: username,\r\n            currentScreen: 'ChatScreen'\r\n          })\r\n        })\r\n        .catch(error => console.error('error', error))\r\n  }\r\n\r\n  render() {\r\n    if(this.state.currentScreen === 'WhatIsYourUsernameScreen') {\r\n     return <UsernameForm onSubmit={this.onUsernameSubmitted} />\r\n    }\r\n    if(this.state.currentScreen === 'ChatScreen') {\r\n      return <ChatScreen currentUsername={this.state.currentUsername}/>\r\n    }\r\n }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}